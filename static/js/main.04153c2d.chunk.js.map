{"version":3,"sources":["index.js"],"names":["App","props","state","breakCount","sessionCount","minutes","seconds","interval","timeRun","inSession","breakIncrement","bind","breakDecrement","sessionIncrement","sessionDecrement","decreaseMinute","toggleTimer","startTimer","pauseTimer","resetTimer","decreaseTimer","toggleStartStop","buzzer","this","setState","prevTime","setInterval","prevState","audioSound","play","clearInterval","pause","currentTime","id","className","onClick","preload","src","ref","audio","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04153c2d.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css'\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            breakCount: 5,\n            sessionCount: 25,\n            minutes: 25,\n            seconds: 0,\n            interval: 0,\n            timeRun: false,\n            inSession: true,\n        }\n        this.breakIncrement = this.breakIncrement.bind(this);\n        this.breakDecrement = this.breakDecrement.bind(this);\n        this.sessionIncrement = this.sessionIncrement.bind(this);\n        this.sessionDecrement = this.sessionDecrement.bind(this);\n        this.decreaseMinute = this.decreaseMinute.bind(this);\n        this.toggleTimer = this.toggleTimer.bind(this);\n        this.startTimer = this.startTimer.bind(this);\n        this.pauseTimer = this.pauseTimer.bind(this);\n        this.resetTimer = this.resetTimer.bind(this);\n        this.decreaseTimer = this.decreaseTimer.bind(this);\n        this.toggleStartStop = this.toggleStartStop.bind(this);\n        this.buzzer = this.buzzer.bind(this);\n          }\n\nbreakIncrement() {\n    if(this.state.breakCount < 60){\n        this.setState(state => ({breakCount: state.breakCount + 1}))}\n}\n\nbreakDecrement() {\n    if(this.state.breakCount > 1){\n    this.setState(state => ({breakCount: state.breakCount - 1}))}\n}\n\nsessionIncrement() {\n    if(this.state.sessionCount < 60){\n        this.setState(state => ({\n            sessionCount: state.sessionCount + 1,\n            minutes: state.sessionCount + 1\n        }))}\n}\n\nsessionDecrement() {\n    if(this.state.sessionCount > 1){\n    this.setState(state => ({\n        sessionCount: state.sessionCount - 1,\n        minutes: state.sessionCount - 1\n    }))}\n}\n\ndecreaseMinute() {\n    this.setState((prevTime) => {\n        return {minutes: prevTime.minutes -1}\n    })\n}\n\ntoggleTimer(inSession){\n    if(inSession){\n        this.setState({minutes: this.state.sessionCount})\n    }else {\n        this.setState({minutes: this.state.breakCount})\n    }\n}\n\ntoggleStartStop(){\n    this.setState(state => {\n        if(state.timeRun === true){\n            this.pauseTimer();\n            this.setState({timeRun: false});\n        }else {\n            this.startTimer();\n            this.setState({timeRun: true})\n        }\n    })\n}\nstartTimer(){\n    let interval = setInterval(this.decreaseTimer, 1000);\n    this.setState({interval: interval})\n}\n\ndecreaseTimer(){\n        switch(this.state.seconds) {\n            case 0:\n                if(this.state.minutes === 0){\n                    if(this.state.inSession){\n                        this.setState({\n                            inSession: false\n                        });\n                        this.toggleTimer(this.state.inSession);\n                        this.buzzer();\n                    }else {\n                        this.setState({\n                            inSession: true\n                        });\n                        this.toggleTimer(this.state.inSession);\n                        this.buzzer();\n                    }\n                }else{\n                    this.decreaseMinute();\n                    this.setState({seconds: 59})\n                }\n                break;\n            default:\n                this.setState((prevState) => {\n                    return {seconds: prevState.seconds - 1}\n                })\n                break;\n        }\n}\n\nbuzzer(){\n        this.audioSound.play();\n}\n\npauseTimer(){\n    clearInterval(this.state.interval);\n}\n\nresetTimer(){\n    this.pauseTimer();\n    this.setState({\n            breakCount: 5,\n            sessionCount: 25,\n            minutes: 25,\n            seconds: 0,\n            interval: 0,\n            timeRun: false,\n            inSession: true\n    });\n    this.audioSound.pause();\n    this.audioSound.currentTime = 0;\n}\n    \nrender() {\n   \n    return (\n        <div id=\"container\">\n            <div id=\"pomodoro-clock\">\n                <h2 id=\"title\">POMODORO CLOCK</h2>\n                <div id=\"timer-label\">\n                    <div id=\"time-left\">\n                        <span>{this.state.minutes < 10 ? \"0\" + this.state.minutes : this.state.minutes}</span>\n                        <span>:</span>\n                        <span>{this.state.seconds < 10 ? \"0\" + this.state.seconds : this.state.seconds}</span>\n                    </div>\n                    <span id=\"timer\">{this.state.inSession === true ? \"It's Session Time\" : \"It's Break Time\"}</span>  \n                </div>\n                <div id=\"settings-container\">\n                  <div id=\"session-label\">\n                    <span className=\"set-title\">Set Session</span>\n                    <div id=\"left-side\">\n                      <div id=\"session-button\">\n                        <button id=\"session-increment\" className=\"settings-button\" onClick={this.sessionIncrement}>\n                          <i className=\"fa fa-arrow-up fa-2x\"/>\n                        </button>\n                        <button id=\"session-decrement\" className=\"settings-button\" onClick={this.sessionDecrement}>\n                          <i className=\"fa fa-arrow-down fa-2x\"/>\n                        </button>\n                      </div>\n                      <span id=\"session-length\">{this.state.sessionCount}</span>\n                    </div>\n                  </div> \n                <div id=\"break-label\">\n                    <span className=\"set-title\" >Set Break</span>\n                    <div id=\"right-side\">\n                      <span id=\"break-length\">{this.state.breakCount}</span>\n                      <div id=\"break-button\">\n                        <button id=\"break-increment\" className=\"settings-button\" onClick={this.breakIncrement}>\n                          <i className=\"fa fa-arrow-up fa-2x\"/>\n                        </button>\n                        <button id=\"break-decrement\" className=\"settings-button\" onClick={this.breakDecrement}>\n                          <i className=\"fa fa-arrow-down fa-2x\"/>\n                        </button>\n                      </div>\n                    </div>\n                </div>\n                </div>\n                \n                <div id=\"actionButton\">\n                    <button id=\"start_stop\" onClick={this.toggleStartStop}>Pause/Play</button>\n                    <button id=\"reset\" onClick={this.resetTimer}>Reset</button>\n                </div>\n                <audio id=\"beep\" preload=\"auto\" src=\"https://drive.google.com/uc?id=1liZHnia5SE_UhEtgIqSXS3Zn4YL7myE9\" ref={(audio) => {this.audioSound = audio}} />\n            </div>\n        </div>\n        \n    )\n}        \n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n//src=\"http://onj3.andrelouis.com/phonetones/unzipped/Meizu%20MX4/notifications/Little_Crystal.mp3\"\n\n// This project used HTML, CSS, React Javascript, fontAwesome for button arrow sign and Bootstrap for style.\n// It has countdown timer and audio as timer change indicator"],"sourceRoot":""}